// This file was generated by counterfeiter
package fake

import (
	"sync"

	"github.com/pivotal-cf/cf-redis-broker/consistency"
	"github.com/pivotal-cf/cf-redis-broker/redis"
)

type Reporter struct {
	ReportStub        func(redis.Instance, error)
	reportMutex       sync.RWMutex
	reportArgsForCall []struct {
		arg1 redis.Instance
		arg2 error
	}
}

func (fake *Reporter) Report(arg1 redis.Instance, arg2 error) {
	fake.reportMutex.Lock()
	fake.reportArgsForCall = append(fake.reportArgsForCall, struct {
		arg1 redis.Instance
		arg2 error
	}{arg1, arg2})
	fake.reportMutex.Unlock()
	if fake.ReportStub != nil {
		fake.ReportStub(arg1, arg2)
	}
}

func (fake *Reporter) ReportCallCount() int {
	fake.reportMutex.RLock()
	defer fake.reportMutex.RUnlock()
	return len(fake.reportArgsForCall)
}

func (fake *Reporter) ReportArgsForCall(i int) (redis.Instance, error) {
	fake.reportMutex.RLock()
	defer fake.reportMutex.RUnlock()
	return fake.reportArgsForCall[i].arg1, fake.reportArgsForCall[i].arg2
}

var _ consistency.InconsistencyReporter = new(Reporter)
