// This file was generated by counterfeiter
package fake

import (
	"sync"

	"github.com/pivotal-cf/cf-redis-broker/consistency"
	"github.com/pivotal-cf/cf-redis-broker/redis"
)

type InstancesProvider struct {
	InstancesStub        func() ([]redis.Instance, error)
	instancesMutex       sync.RWMutex
	instancesArgsForCall []struct{}
	instancesReturns     struct {
		result1 []redis.Instance
		result2 error
	}
}

func (fake *InstancesProvider) Instances() ([]redis.Instance, error) {
	fake.instancesMutex.Lock()
	fake.instancesArgsForCall = append(fake.instancesArgsForCall, struct{}{})
	fake.instancesMutex.Unlock()
	if fake.InstancesStub != nil {
		return fake.InstancesStub()
	} else {
		return fake.instancesReturns.result1, fake.instancesReturns.result2
	}
}

func (fake *InstancesProvider) InstancesCallCount() int {
	fake.instancesMutex.RLock()
	defer fake.instancesMutex.RUnlock()
	return len(fake.instancesArgsForCall)
}

func (fake *InstancesProvider) InstancesReturns(result1 []redis.Instance, result2 error) {
	fake.InstancesStub = nil
	fake.instancesReturns = struct {
		result1 []redis.Instance
		result2 error
	}{result1, result2}
}

var _ consistency.InstancesProvider = new(InstancesProvider)
